name: Auto Version Increment

on:
  push:
    branches:
      - main

jobs:
  increment-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up JDK 23
        uses: actions/setup-java@v4
        with:
          java-version: '23'
          distribution: 'temurin'
          cache: maven

      - name: Get current version
        id: get_version
        run: |
          CURRENT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "Current version: $CURRENT_VERSION"
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT

      - name: Increment patch version
        id: increment_version
        run: |
          CURRENT_VERSION=${{ steps.get_version.outputs.current_version }}
          # Diviser la version en parties
          IFS='.' read -r -a VERSION_PARTS <<< "$CURRENT_VERSION"
          MAJOR=${VERSION_PARTS[0]}
          MINOR=${VERSION_PARTS[1]}
          PATCH=${VERSION_PARTS[2]}
          
          # Incrémenter le numéro de patch
          PATCH=$((PATCH + 1))
          
          # Reconstruire la version
          NEW_VERSION="$MAJOR.$MINOR.$PATCH"
          echo "New version: $NEW_VERSION"
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Update version in pom.xml
        run: mvn versions:set -DnewVersion=${{ steps.increment_version.outputs.new_version }} -DgenerateBackupPoms=false

      - name: Commit and push new version
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git add pom.xml
          git commit -m "Auto-increment version to ${{ steps.increment_version.outputs.new_version }}"
          git tag -a "v${{ steps.increment_version.outputs.new_version }}" -m "Version ${{ steps.increment_version.outputs.new_version }}"
          git push origin main --tags
