name: Maven Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      releaseVersion:
        description: 'Version de release (ex: 1.2.3)'
        required: true
      developmentVersion:
        description: 'Prochaine version de développement (ex: 1.2.4-SNAPSHOT)'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: maven

      - name: Build avec Maven
        run: mvn -B clean verify
        
      - name: Configurer Git
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
      
  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: maven
          server-id: github
  
      - name: Configurer Git
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
  
      - name: Préparer la release
        run: |
          mvn versions:set -DnewVersion=${{ github.event.inputs.releaseVersion }}
          git commit -am "Prépare la release ${{ github.event.inputs.releaseVersion }}"
          git tag -a v${{ github.event.inputs.releaseVersion }} -m "Version ${{ github.event.inputs.releaseVersion }}"
  
      - name: Build et publier
        run: mvn -B clean deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
      - name: Préparer la prochaine version
        run: |
          mvn versions:set -DnewVersion=${{ github.event.inputs.developmentVersion }}
          git commit -am "Prépare pour la prochaine version de développement"
          git push
          git push --tags
  
      - name: Créer la GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ github.event.inputs.releaseVersion }}
          name: Release ${{ github.event.inputs.releaseVersion }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            target/*.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
  release-from-tag:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
  
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: maven
          server-id: github
  
      - name: Build et publier
        run: mvn -B clean deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
      - name: Créer la GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            target/*.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
