name: Release Maven Project

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest

    permissions:
      contents: write # pour push une release sur GitHub

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '23'

      - name: Set version automatically
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          CURRENT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "Current version: $CURRENT_VERSION"
          
          # IncrÃ©mente la version patch genre 1.0.0 -> 1.0.1
          NEW_VERSION=$(echo $CURRENT_VERSION | awk -F. -v OFS=. '{$NF += 1; print}')
          echo "New version: $NEW_VERSION"

          mvn versions:set -DnewVersion=$NEW_VERSION
          mvn versions:commit

          git add pom.xml
          git commit -m "chore: bump version to $NEW_VERSION"
          git tag v$NEW_VERSION
          git push origin main --tags

          
      - name: Build package
        run: mvn clean package

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.set_version.outputs.new_version }}
          name: Release v${{ steps.set_version.outputs.new_version }}
          body: |
            ðŸš€ Nouvelle version release automatique.

        env:
          GITHUB_TOKEN: ${{ secrets.TESTKEY }}

      - name: Upload release asset (jar)
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.set_version.outputs.new_version }}
          name: Release v${{ steps.set_version.outputs.new_version }}
          files: target/*.jar
        env:
          GITHUB_TOKEN: ${{ secrets.TESTKEY }}
